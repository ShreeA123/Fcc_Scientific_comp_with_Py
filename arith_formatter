def arithmetic_arranger(problems, sec_para=False):

  if len(problems) > 5:
    return "Error: Too many problems."

  a = ""
  b = ""
  c = ""
  d = ""

  i = 0
  for i, j in enumerate(problems):
    x = j.split(" ")
    op1 = x[0]
    oper = x[1]
    op2 = x[2]

    if not op1.isdigit() or not op2.isdigit():
      return "Error: Numbers must only contain digits."
    if not (oper == "+" or oper == "-"):
      return "Error: Operator must be '+' or '-'."
    if len(op1) > 4 or len(op2) > 4:
      return "Error: Numbers cannot be more than four digits."

    width = max(len(op1), len(op2)) + 2
    a += op1.rjust(width)
    b += oper + op2.rjust(width - 1)
    c += ("-" * width)

    if sec_para == True:
      if oper == "+":
        res = int(op1) + int(op2)
      else:
        res = int(op1) - int(op2)
      d += str(res).rjust(width)

    if i < len(problems) - 1:
      a += "    "
      b += "    "
      c += "    "
      d += "    "

  arranged_problems = a + "\n" + b + "\n" + c
  if sec_para == True:
    arranged_problems += "\n" + d

  return arranged_problems


#Example
#Function Call:
arithmetic_arranger(["32 + 698", "3801 - 2", "45 + 43", "123 + 49"])

#Function Call:
arithmetic_arranger(["32 + 8", "1 - 3801", "9999 + 9999", "523 - 49"], True)
